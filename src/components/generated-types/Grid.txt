
/**
 * The Grid component is a lightweight wrapper around the CSS Grid Layout.
 * It's used for creating responsive and fluid layouts.
 */
export type ElementRef = GridRef

export type GridRef = Readonly<{
  Grid: GridRefProperties
}>

export type GridRefProperties = Readonly<{
  /**
   * Defines the align-content style property.
   * It's applied for all screen sizes.
   */
  alignContent: 'stretch' | 'center' | 'flex-start' | 'flex-end' | 'space-between' | 'space-around'

  /**
   * Defines the align-items style property.
   * It's applied for all screen sizes.
   */
  alignItems: 'flex-start' | 'center' | 'flex-end' | 'stretch' | 'baseline'

  /**
   * The content of the component.
   */
  children: React.ReactNode

  /**
   * The system grid spacing value.
   */
  spacing: number

  /**
   * Defines the flex-direction style property.
   * It's applied for all screen sizes.
   */
  direction: 'row' | 'row-reverse' | 'column' | 'column-reverse'

  /**
   * Defines the justify-content style property.
   * It's applied for all screen sizes.
   */
  justifyContent: 'flex-start' | 'center' | 'flex-end' | 'space-between' | 'space-around' | 'space-evenly'

  /**
   * Defines the number of grids the component is going to use.
   * It's applied for the `lg` breakpoint and wider screens if not overridden.
   */
  lg: boolean | number

  /**
   * Defines the number of grids the component is going to use.
   * It's applied for the `md` breakpoint and wider screens if not overridden.
   */
  md: boolean | number

  /**
   * Defines the number of grids the component is going to use.
   * It's applied for the `sm` breakpoint and wider screens if not overridden.
   */
  sm: boolean | number

  /**
   * Defines the number of grids the component is going to use.
   * It's applied for the `xl` breakpoint and wider screens.
   */
  xl: boolean | number

  /**
   * Defines the number of grids the component is going to use.
   * It's applied for the `xs` breakpoint and wider screens if not overridden.
   */
  xs: boolean | number

  /**
   * If `true`, it sets `min-width: 0` on the item.
   * Refer to the limitations section of the documentation to better understand the use case.
   */
  zeroMinWidth: boolean
}>