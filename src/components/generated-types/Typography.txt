
export type ElementRef = TypographyRef

export type TypographyRef = Readonly<{
  Typography: TypographyRefProperties
}>

export type TypographyRefProperties = Readonly<{
  // The component used for the root node. Either a string to use a HTML element or a component.
  component: string | React.ComponentType

  // Applies the theme typography styles.
  variant: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'subtitle1' | 'subtitle2' | 'body1' | 'body2' | 'caption' | 'button' | 'overline' | 'srOnly' | 'inherit'

  // If true, the text will have a bottom margin.
  gutterBottom: boolean

  // If true, the text will not wrap, but instead will truncate with an ellipsis.
  noWrap: boolean

  // If true, the text will have a line through.
  strikethrough: boolean

  // If true, the text will be underlined.
  underline: boolean

  // Set the text-align on the component.
  align: 'inherit' | 'left' | 'center' | 'right' | 'justify'

  // The color of the component. It supports those theme colors that make sense for this component.
  color: 'initial' | 'inherit' | 'primary' | 'secondary' | 'textPrimary' | 'textSecondary' | 'error'

  // The paragraph attribute of the Typography node.
  paragraph: boolean
}>