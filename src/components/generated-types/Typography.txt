
/**
 * Typography component is used to present text in a consistent and readable manner.
 * It provides a set of predefined styles and variants that can be applied to text elements.
 */
export type ElementRef = TypographyRef

export type TypographyRef = Readonly<{
  Typography: TypographyRefProperties
}>

export type TypographyRefProperties = Readonly<{
  /**
   * The text alignment of the content.
   */
  align: 'inherit' | 'left' | 'center' | 'right' | 'justify'

  /**
   * The color of the component.
   */
  color:
    | 'initial'
    | 'inherit'
    | 'primary'
    | 'secondary'
    | 'textPrimary'
    | 'textSecondary'
    | 'error'

  /**
   * Controls the display type.
   */
  display: 'initial' | 'block' | 'inline'

  /**
   * If true, the text will have a bottom margin.
   */
  gutterBottom: boolean

  /**
   * If true, the text will not wrap, but instead will truncate with an ellipsis.
   */
  noWrap: boolean

  /**
   * If true, the text will have a bottom margin.
   */
  paragraph: boolean

  /**
   * Applies the theme typography styles.
   */
  variant:
    | 'h1'
    | 'h2'
    | 'h3'
    | 'h4'
    | 'h5'
    | 'h6'
    | 'subtitle1'
    | 'subtitle2'
    | 'body1'
    | 'body2'
    | 'caption'
    | 'button'
    | 'overline'
    | 'srOnly'
    | 'inherit'

  /**
   * The component maps the variant prop to a range of different HTML element types.
   * For instance, subtitle1 to h6. If you wish to change that mapping, you can provide your own.
   * Alternatively, you can use the component property.
   */
  variantMapping: Partial<
    Record<
      'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'subtitle1' | 'subtitle2' | 'body1' | 'body2' | 'caption' | 'button' | 'overline',
      string
    >
  >
}>