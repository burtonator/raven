
/**
 * The Snackbar component provides brief messages about app processes at the bottom of the screen.
 */
export type ElementRef = SnackbarRef

export type SnackbarRef = Readonly<{
  Snackbar: SnackbarRefProperties
}>

export type SnackbarRefProperties = Readonly<{
  /**
   * The action to display. It renders after the message, at the end of the snackbar.
   */
  action: React.ReactNode

  /**
   * The anchor of the `Snackbar`.
   */
  anchorOrigin: {
    horizontal: 'left' | 'center' | 'right'
    vertical: 'top' | 'bottom'
  }

  /**
   * The number of milliseconds to wait before automatically calling the `onClose` function.
   */
  autoHideDuration: number

  /**
   * Replace the `SnackbarContent` component.
   */
  ContentProps: Partial<SnackbarContentProps>

  /**
   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.
   */
  disableWindowBlurListener: boolean

  /**
   * The message to display.
   */
  message: React.ReactNode

  /**
   * Callback fired when the component requests to be closed.
   */
  onClose: (event: React.SyntheticEvent<any>, reason: string) => void

  /**
   * If `true`, `Snackbar` is open.
   */
  open: boolean

  /**
   * The ARIA role attribute of the element.
   */
  role: string

  /**
   * The severity of the `Snackbar`. Used in combination with `variant="filled"`.
   */
  severity: 'success' | 'error' | 'warning' | 'info'

  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: SxProps<Theme>

  /**
   * The component used for the transition.
   */
  TransitionComponent: React.ComponentType<TransitionProps>

  /**
   * The duration for the transition, in milliseconds.
   */
  transitionDuration: number | { enter?: number; exit?: number }

  /**
   * The props used for the `Transition` component.
   */
  TransitionProps: TransitionProps
}>