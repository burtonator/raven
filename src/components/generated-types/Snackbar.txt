
export type SnackbarRef = Readonly<{
  Snackbar: SnackbarRefProperties
}>

export type SnackbarRefProperties = Readonly<{
  // The anchor of the snackbar.
  anchorOrigin: {
    horizontal: 'left' | 'center' | 'right'
    vertical: 'top' | 'bottom'
  }

  // The number of milliseconds to wait before automatically calling the onClose function.
  autoHideDuration: number

  // Replace the snackbar.
  key: string

  // The message to display.
  message: string

  // Callback fired when the component requests to be closed.
  onClose: (event: React.SyntheticEvent<any>, reason: string) => void

  // If true, the snackbar is open.
  open: boolean

  // The severity of the snackbar.
  severity: 'success' | 'error' | 'warning' | 'info'

  // The action to display.
  action: React.ReactNode

  // The component used for the transition.
  TransitionComponent: React.ComponentType

  // Props applied to the transition element.
  TransitionProps: object
}>